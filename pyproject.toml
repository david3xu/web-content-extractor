[tool.poetry]
name = "web-content-extractor"
version = "1.0.0"
description = "Professional web content extraction and link categorization"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.10"
httpx = "^0.25.0"           # Modern async HTTP client
beautifulsoup4 = "^4.12.0"  # HTML parsing
pydantic = "^2.4.0"         # Settings and validation
structlog = "^23.1.0"       # Structured logging
typer = {extras = ["all"], version = "^0.9.0"}  # Modern CLI framework
pyyaml = "^6.0"             # Configuration file support
pydantic-settings = "^2.10.1"

[tool.poetry.group.api.dependencies]
fastapi = "^0.104.0"        # Web API framework
uvicorn = {extras = ["standard"], version = "^0.24.0"}  # ASGI server

[tool.poetry.group.azure.dependencies]
azure-functions = "^1.18.0"  # Azure Functions runtime
azure-storage-blob = "^12.19.0"  # Azure Blob Storage

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
black = "^23.9.0"
ruff = "^0.0.290"
mypy = "^1.5.0"
pre-commit = "^3.4.0"

[tool.poetry.scripts]
web-extractor = "src.cli:main"

[tool.bandit]
exclude_dirs = ["tests", "docs"]
skips = ["B101", "B601"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]

[tool.mypy]
plugins = ["pydantic.mypy"]
python_version = "3.10"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
ignore_missing_imports = true
implicit_reexport = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "models: marks tests for enhanced models",
    "value_objects: marks tests for value objects",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/conftest.py",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
